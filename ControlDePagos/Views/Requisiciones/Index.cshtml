@{
    ViewBag.Title = "Index";
}
<head>
    <title>Requisiciones</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
    <script src="https://unpkg.com/xlsx@latest/dist/xlsx.full.min.js"></script>
    <script src="https://unpkg.com/file-saverjs@latest/FileSaver.min.js"></script>
    <script src="https://unpkg.com/tableexport@latest/dist/js/tableexport.min.js"></script>
</head>
<input id="ID" type="number" hidden />
<form class="form-inline">

    <div class="form-group mx-sm-3 mt-3">
        <button type="submit" class="btn btn-info"><i class="fas fa-sync-alt"></i> Actualizar</button>
    </div>
    <div class="form-group mt-3 mr-3">
        <button type="button" class="btn btn-dark" data-toggle="modal" data-target="#ModalFiltros"> <i class="fas fa-filter"></i> Filtrar</button>
    </div>
    @if (Session["Permiso"].ToString() == "Administrador")
    {
        <div class="form-group mt-3">
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#myModal"> <i class="fas fa-plus-square"></i> Nueva requisicion</button>
        </div>
    }
    </form>
<div class="container" style="margin-top:28px;">
    <div class="row">
        <div class="col-11" >
            <table id="myTable" class="table table-striped">
                <thead>
                    <tr>
                        <th scope="col">Folio (ID)</th>
                        <th scope="col">Cuenta cargo</th>
                        <th scope="col">Total</th>
                        <th scope="col">Moneda</th>
                        <th scope="col">Descripción</th>
                        <th scope="col">Solicitud</th>
                        <th scope="col">Tipo req.</th>
                        <th scope="col"># Factura</th>
                        <th scope="col">Total cliente</th>
                        <th scope="col">Acciones &nbsp; &nbsp; </th>
                    </tr>
                </thead>
                <tbody id="cuerpo">
                </tbody>
            </table>

        </div>
    </div>
</div>


@*MODAL REGISTRAR REQUISICION*@
<div class="container">
    <!-- The Modal -->
    <div class="modal fade" id="myModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title"><i class="fas fa-file-alt"></i> <label id="TituloModal"> Registrar Requisición</label></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <form id="formulario">
                        <div class="form-group row">
                            <label for="NoFolio" class="col-sm-2 col-form-label"><a style="color:red"> * </a>Folio</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="NoFolio" placeholder="#Folio (ID)" required autocomplete="off">
                            </div>

                            <label for="Total" class="col-sm-0 col-form-label"><a style="color:red"> * </a>Total</label>
                            <div class="col-sm-6">
                                <div class="input-group">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input id="Total" type="text" onkeyup="this.value=Numeros(this.value)" class="form-control" autocomplete="off" placeholder="0.00">
                                    <div class="input-group-append">
                                        <select class="input-group-text" id="Moneda" style="background-color:white;">
                                            <option value="MXN">MXN</option>
                                            <option value="USD">USD</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="CuentaCargo" class="col-sm-2 col-form-label"><a style="color:red">*</a>Cuenta cargo</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="CuentaCargo" placeholder="# Cuenta" required autocomplete="off">
                            </div>

                            <label for="Solicitud" class="col-sm-0 col-form-label">Solicitud</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="Solicitud" placeholder="Solicitud" required autocomplete="off">
                            </div>

                            <label for="TipoReq" class="col-sm-0 col-form-label"><a style="color:red"> * </a>Tipo</label>
                            <div class="col-sm-2">
                                <select class="input-group-text" id="TipoReq" style="background-color:white;" onchange="GenerarFolio()">
                                    <option value="0">Seleccione...</option>
                                    <option value="INTERNA">INTERNA</option>
                                    <option value="BEPCO">BEPCO</option>
                                    <option value="PROYECTO">PROYECTO</option>
                                </select>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="Notas" class="col-sm-2 col-form-label"><a style="color:red"> * </a>Descripción</label>
                            <div class="col-sm-10">
                                <textarea class="form-control col-sm-12" id="Descripcion" rows="3" placeholder="Agregue una descripción para la requisición" autocomplete="off"></textarea>
                            </div>
                        </div>

                        <div class="form-group row">
                            <label for="NumFactura" class="col-sm-2 col-form-label"># Factura</label>
                            <div class="col-sm-3">
                                <input type="text" class="form-control" id="NumFactura" placeholder="Numero de factura" required autocomplete="off">
                            </div>

                            <label for="CargoCliente" class="col-sm-3 col-form-label">Total + Cargo a cliente</label>
                            <div class="input-group col-sm-4">
                                <div class="input-group-prepend">
                                    <span class="input-group-text">$</span>
                                </div>
                                <input id="CargoCliente" type="text" onkeyup="this.value=Numeros(this.value)" class="form-control" autocomplete="off" placeholder="0.00" title="Considere que la cantidad deber ser mayor o igual al campo de total.">                               
                            </div>

                            @*<div class="col-sm-4">
                                <input type="text" class="form-control" id="CargoCliente" placeholder="Ingrese una cantidad" required autocomplete="off">
                            </div>*@

                        </div>                       
                    </form>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer" id="footerEditar">
                    <button type="button" id="btnRegistrar" class="btn btn-success" onclick="RegistrarRequisicion()"><i class="fas fa-save"></i> Registrar</button>
                    <button type="button" id="btnActualizar" class="btn btn-success" onclick="ActualizarReq()"><i class="fas fa-save"></i> Actualizar</button>
                </div>

            </div>
        </div>
    </div>
</div>

@*MODAL DE  HISTORIAL DE LIBERACIONES*@
<div class="container">
    <!-- The Modal -->
    <div class="modal fade" id="ModalHistorial">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title"><i class="fas fa-scroll"></i> <label id="TituloModalHistorial"> Historial de liberaciónes </label></h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <form id="formularioHistorial">
                        <h5 class="mb-4" style="text-align:center !important; color:#dc0c0c;"> <i class="fas fa-info-circle"></i> Datos de la requisición</h5>
                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label for="FolioLiberacion"><i class="fas fa-hashtag"></i> Folio</label>
                                <input type="text" class="form-control" id="FolioLiberacion" disabled>
                            </div>

                            <div class="form-group col-md-3">
                                <label for="CuentaLiberacion"><i class="fas fa-money-check-alt"></i> Cuenta cargo</label>
                                <input type="text" class="form-control" id="CuentaLiberacion" disabled autocomplete="off">
                            </div>
                            <div class="form-group col-md-3">
                                <label for="TotalLiberacion"><i class="fas fa-dollar-sign"></i> Total</label>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input id="TotalLiberacion" type="text" class="form-control" disabled>                                  
                                </div>                                
                            </div>
                            <div class="form-group col-md-3">
                                <label for="RestanteLiberacion" class="font-weight-bold"><i class="fas fa-coins"></i> Restante</label>
                                <div class="input-group mb-2">
                                    <div class="input-group-prepend">
                                        <span class="input-group-text">$</span>
                                    </div>
                                    <input id="RestanteLiberacion" type="text" class="form-control" disabled autocomplete="off" placeholder="0.00">
                                </div>                             
                            </div>
                        </div>
                        <hr />
                        <!-- TABLA DE REGISTROS DE LIBERACIONES-->
                        <h5 class="mb-4" style=" text-align: center !important; color: #dc0c0c;"> <i class="fas fa-book"></i> Historial de liberaciones</h5>
                        <div class="form-row">
                            <div class="form-group">                  
                                <button id="btnRegistrarLib" type="button" class="btn btn-success btn-sm" onclick="RegistrarLiberacion(false)"> <i class="fas fa-hand-holding-usd"></i> Registrar liberación</button>
                            </div>
                        </div>
                        <table id="TablaHistorial" class="table" cellspacing="0">
                            <thead style="text-align:center !important">
                                <tr>
                                    <th scope="col"># Liberación</th>
                                    <th scope="col">Monto</th>
                                    <th scope="col">Fecha registro</th>
                                    <th scope="col">Notas</th>
                                    <th scope="col">Acciones</th>
                                </tr>
                            </thead>
                            <tbody id="cuerpoHistorial" style="text-align:center !important">
                            </tbody>
                        </table>

                    </form>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer" id="footerEditar">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>

            </div>
        </div>
    </div>
</div>

@*@<!-- MODAL PARA FILTRAR REQUISICIONES-->*@
<div class="modal fade" id="ModalFiltros" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"> <i class="fas fa-filter"></i> Filtrar requisiciones</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">             
                <div class="form-row" style="margin-left:71px;">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="checkbox" id="CheckInterna" value="">
                        <label class="form-check-label" for="CheckInterna">INTERNA</label>
                    </div>
                    <div class="form-check form-check-inline ml-3">
                        <input class="form-check-input" type="checkbox" id="CheckBepco" value="">
                        <label class="form-check-label" for="CheckBepco">BEPCO</label>
                    </div>
                    <div class="form-check form-check-inline ml-3">
                        <input class="form-check-input" type="checkbox" id="CheckProyecto" value="">
                        <label class="form-check-label" for="CheckProyecto">PROYECTO 3R</label>                       
                    </div>

                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" onclick="LimpiarFiltros()"> <i class="fas fa-brush"></i> Limpiar filtros</button>
                <button type="button" class="btn btn-success" onclick="Filtrar()"> <i class="fas fa-check-circle"></i> Aplicar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var table = $('#myTable').DataTable({
        //Saul Gonzalez 22/10/2020: Se asigna una barra de herramientas en la cabecera de la tabla
        "dom": '<"toolbar">frtip',
        "ordering": false, //Sirve para quitar el ordenamiento
        //Saul Gonzalez 22/10/2020: Se define el lenguaje para la tabla
        language: {
            "decimal": "",
            "emptyTable": "No hay información",
            "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
            "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
            "infoFiltered": "(Filtrado de _MAX_ total entradas)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ Entradas",
            "loadingRecords": "Cargando...",
            "processing": "Procesando...",
            "search": "Buscar:",
            "zeroRecords": "Sin resultados encontrados",
            "paginate": {
                "first": "Primero",
                "last": "Ultimo",
                "next": "Siguiente",
                "previous": "Anterior"
            }
        },
    });

    var TablaHistorial = $('#TablaHistorial').DataTable({
        //Saul Gonzalez 26/10/2020: Se asigna una barra de herramientas en la cabecera de la tabla
        "dom": '<"toolbarHistorial">frtip',
        "bInfo": true,
        "bFilter": false,
        "order": [[1, "asc"]],
        //Saul Gonzalez 26/10/2020: Se define el lenguaje para la tabla
        language: {
            "decimal": "",
            "emptyTable": "No hay información",
            "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
            "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
            "infoFiltered": "(Filtrado de _MAX_ total entradas)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ Entradas",
            "loadingRecords": "Cargando...",
            "processing": "Procesando...",
            "search": "Buscar:",
            "zeroRecords": "Sin resultados encontrados",
            "paginate": {
                "first": "Primero",
                "last": "Ultimo",
                "next": "Siguiente",
                "previous": "Anterior"
            }
        },
    });
    $(document).ready(function () {
        //Saul Gonzalez 15/04/2021: Esta funcion realiza una consulta en la BD para mostrar el listado de las requisiciones
        ListarRequisiciones();
        $("#NoFolio").prop('disabled', true);
        $("#NumFactura").prop('disabled', true);
        $("#CargoCliente").prop('disabled', true);
        $("#btnActualizar").hide();


        //Saul Gonzalez 16/04/2021: Resetear modal cuando se cierra
        $("#myModal").on("hidden.bs.modal", function () {
            $('#formulario')[0].reset();
            $("#NoFolio").prop('disabled', true);
            $("#NoFolio").prop('disabled', true);
            $("option").removeAttr("selected");
            $('#btnActualizar').hide();
            $('#btnRegistrar').show();
            $("#TipoReq").prop('disabled', false);
            $("#TituloModal").text("Registrar Requisición");

            //Deshabilitamos los campos de Factura y cargo cliente
            $("#NumFactura").prop('disabled', true);
            $("#CargoCliente").prop('disabled', true);

        });
    });

    function ListarRequisiciones(CheckInterna = false, CheckBepco = false, CheckProyecto = false) {
        $.ajax({
            url: "/Requisiciones/ListarRequisiciones",
            type: "GET",
            //data: { leagueId: 5 },
            success: function (data) {
                table.clear().draw();
                //Saul Gonzalez 14/10/2020: Hacemos un foreach para llenar la informacion de la tabla
                $.each(data, function (i, obj) {
                    //Saul Gonzalez 14/10/2020: Usamos backtic para agregar las botones de acciones
                    



                    //Saul Gonzalez 20/07/2021: Si es administrador agregamos el boton para realizar liberaciones, en caso contrario se deshabilita ese boton
                    if (obj.UsuarioPermiso == "Administrador") {
                        var btnAcciones = `
                          <button id="btnCargar" type="button" class="btn btn-success btn-sm" onclick="CargarRequisicion('${obj.Folio}', '${obj.TipoReq}')" title="Editar requisición"><i class="fas fa-edit"></i></button>
                           <button type="button" class="btn btn-danger btn-sm" onclick="CancelarRequisicion('${obj.Folio}','${obj.Descripcion}')" title="Cancelar requisición"><i class="fas fa-times-circle"></i></button>`;


                        //Si la requisicion es abierta agregamos un boton para ver las liberaciones de dinero correspodientes a la REQ.
                        if (obj.Solicitud == "Abierta" || obj.Solicitud == "ABIERTA" || obj.Solicitud == "abierta") {
                            obj.Solicitud = `<p class="font-weight-bold" style="color:#28a745">${obj.Solicitud}</p>`;
                            btnAcciones = `<button id="btnCargar" type="button" class="btn btn-success btn-sm" onclick="CargarRequisicion('${obj.Folio}', '${obj.TipoReq}')" title="Editar requisición"><i class="fas fa-edit"></i></button>
                        <button id="btnLiberacion" type="button" class="btn btn-primary btn-sm" onclick="CargarLiberaciones('${obj.Id}')" title="Historial de liberaciones"><i class="fas fa-hand-holding-usd"></i></button>
                        <button type="button" class="btn btn-danger btn-sm" onclick="CancelarRequisicion('${obj.Folio}','${obj.Descripcion}')" title="Cancelar requisición"><i class="fas fa-times-circle"></i></button>`;
                        }
                    } //Si el usuario es de facturas o invitado quitamos el boton para registar liberaciones y el de cancelar
                    else {      
                        var btnAcciones = `
                          <button id="btnCargar" type="button" class="btn btn-success btn-sm" onclick="CargarRequisicion('${obj.Folio}', '${obj.TipoReq}')" title="Editar requisición"><i class="fas fa-edit"></i> Editar</button>`;

                        if (obj.Solicitud == "Abierta" || obj.Solicitud == "ABIERTA" || obj.Solicitud == "abierta") {
                            obj.Solicitud = `<p class="font-weight-bold" style="color:#28a745">${obj.Solicitud}</p>`;
                            btnAcciones = `<button id="btnCargar" type="button" class="btn btn-success btn-sm" onclick="CargarRequisicion('${obj.Folio}', '${obj.TipoReq}')" title="Editar requisición"><i class="fas fa-edit"></i> Editar</button>`;
                        }
                    }
                   

                    var Folio = `<p>${obj.Folio}</p>`;
                    //Realizamos un split para separar la secuencia y verificar si la requisicion esta cancelada
                    var CadenaFolio = obj.Folio.split('-');
                    //Si la requisicion esta cancelada ponemos el texto en rojo
                    if (CadenaFolio[0] == "CANCELADA") {
                        Folio = `<p style="color:#dc2a3b">${obj.Folio}</p>`;
                        btnAcciones = `
                          <button id="btnCargar" disabled type="button" class="btn btn-success btn-sm" title="Acción no disponible"><i class="fas fa-edit"></i></button>
                           <button type="button" disabled class="btn btn-danger btn-sm" title="Acción no disponible"><i class="far fa-trash-alt"></i></button>`;
                    }

                    //Asignamos el folio como clase al campo del total, para que el momento de registrar una liberacion sea mas facil actualizar ese campo
                    obj.Total = FormatoMiles(obj.Total.toFixed(2));
                    var Total = `<p class="${obj.Folio}">${ obj.Total}</p>`;
                    if (obj.LimiteAlcanzado) {
                        Total = `<p class="${obj.Folio} font-weight-bold" style="color:#dc2a3b">${obj.Total}</p>`;
                    }

                    if (obj.NumeroDeFactura == null || obj.NumeroDeFactura == "") {
                        obj.NumeroDeFactura = "---";
                    }
                    if (obj.TotalCargoCliente == null || obj.TotalCargoCliente == "") {
                        obj.TotalCargoCliente = "---";
                    }                  

                    //Creamos la etiqueta del porcentaje para la etiqueta de Total cliente
                    var TotalCliente = "---";
                    if (obj.PorcentajeCliente != null) {
                        //Aplicamos el formato para que separe los miles
                        obj.TotalCargoCliente = FormatoMiles(obj.TotalCargoCliente.toFixed(2));
                        TotalCliente = `${obj.TotalCargoCliente} <a class="font-weight-bold" style="color:#009688" title="${obj.PorcentajeCliente}% más que la cantidad original (Total)."> (+${obj.PorcentajeCliente}%)</a>`;
                       
                    }

                    //Saul Gonzalez 21/04/2021: Si se aplico un filtro validamos que tipo requisicion se esta filtrando
                    if (obj.TipoReq == "INTERNA" && CheckInterna == true) {
                        table.row.add([Folio, obj.Cuenta_Cargo, Total, obj.Moneda, obj.Descripcion, obj.Solicitud, obj.TipoReq, obj.NumeroDeFactura, TotalCliente, btnAcciones])
                            .draw()
                            .node();
                    }
                    if (obj.TipoReq == "BEPCO" && CheckBepco == true) {
                        table.row.add([Folio, obj.Cuenta_Cargo, Total, obj.Moneda, obj.Descripcion, obj.Solicitud, obj.TipoReq, obj.NumeroDeFactura, TotalCliente, btnAcciones])
                            .draw()
                            .node();
                    }
                    if (obj.TipoReq == "PROYECTO" && CheckProyecto == true) {
                        table.row.add([Folio, obj.Cuenta_Cargo, Total, obj.Moneda, obj.Descripcion, obj.Solicitud, obj.TipoReq, obj.NumeroDeFactura, TotalCliente, btnAcciones])
                            .draw()
                            .node();
                    }

                    if (CheckInterna == false && CheckBepco == false && CheckProyecto == false) {
                        //Saul Gonzalez 21/04/2021: Agregamos los datos de la requisicion a la tabla
                        table.row.add([Folio, obj.Cuenta_Cargo, Total, obj.Moneda, obj.Descripcion, obj.Solicitud, obj.TipoReq, obj.NumeroDeFactura, TotalCliente, btnAcciones])
                            .draw()
                            .node();
                    }

                });
            }
        });
    }

    function Numeros(string) {//Solo numeros
        var out = '';
        var filtro = '1234567890.';//Caracteres validos

        //Recorrer el texto y verificar si el caracter se encuentra en la lista de validos
        for (var i = 0; i < string.length; i++)
            if (filtro.indexOf(string.charAt(i)) != -1)
                //Se añaden a la salida los caracteres validos
                out += string.charAt(i);

        //Retornar valor filtrado
        return out;
    }
    function FormatoMiles(nStr) {
        nStr += '';
        var x = nStr.split('.');
        var x1 = x[0];
        var x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }

    function RegistrarLiberacion(romper = false) {
        if(!romper) {
            Swal.mixin({
                input: 'text',
                confirmButtonText: 'Siguiente &rarr;',
                showCancelButton: true,
                progressSteps: ['1', '2', '3','4']
            }).queue([
                //Pregunta 1
                {
                    title: '$ Monto',
                    text: 'Ingrese el monto a liberar',
                    input: 'number',
                    inputAttributes: {
                        min: 0,
                        max: 10000000,
                        step: 0.0001,
                        placeholder: "$0.00",
                    },

                },
                //Pregunta 2
                {
                    title: 'Ingrese una fecha',
                    text: 'La fecha debe tener el formato DD-MM-YYYY',
                    input: 'text',
                    inputAttributes: {
                        placeholder: "DD-MM-YYYY",
                    },

                },
                //Pregunta 3
                {
                    title: '# Liberación',
                    text: 'Ingrese el numero de liberación',
                    input: 'text',
                    inputAttributes: {
                        placeholder: "# Liberación",
                    },
                },
                //Pregunta 4
                {
                    title: 'Notas',
                    text: 'Si lo desea puede agregar una nota',
                    input: 'text',
                    inputAttributes: {
                        placeholder: "Ingrese su nota aquí.",
                    },
                },
            ]).then((result) => {
                if (result.value) {
                    const Respuestas = JSON.stringify(result.value);
                    var Folio = $("#FolioLiberacion").val();
                    var Params = {
                        "Respuestas": Respuestas, "Folio": Folio,
                    };
                    //Una vez capturado las respuesta mandamos los parametros al metodo
                    $.ajax({
                        type: "POST",
                        traditional: true,
                        async: false,
                        cache: false,
                        url: '/Requisiciones/GuardarLiberacion',
                        context: document.body,
                        data: Params,
                        success: function (result) {
                            if (result.status) {
                                Swal.fire({
                                    title: 'Liberacion registrada!',
                                    html: ' <img src="/img/Liberacion.gif" style="width:200px; border-radius:10px;" alt="Registrando">',
                                    showConfirmButton: true,
                                    allowOutsideClick: false
                                }).then((result) => {
                                    //Volvemos a cargar los datos en la tabla para mostrar la liberacionn recien creada
                                    if (result.isConfirmed) {
                                        CargarLiberaciones($("#ID").val());
                                    }
                                })

                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error!',
                                    text: result.mensaje,
                                    showConfirmButton: true,
                                    allowOutsideClick: false
                                }).then((result) => {
                                    //Si ocurre un error por tipos datos o campos vacios volvemos pedir los datos
                                    if (result.isConfirmed) {
                                        RegistrarLiberacion(false);
                                    }
                                })

                            }

                        },
                        error: function (xhr) {
                            // Debugger;
                            console.log(xhr.responseText);
                            alert("Error has occurred...");
                        }
                    });
                }
            })
        }

    }

    function RegistrarRequisicion() {
        //Saul Gonzalez 22/10/2020: Declaramos los parametros que se van a guardar
        var NoFolio = $("#NoFolio").val();
        var Total = $("#Total").val();
        var Moneda = $("#Moneda").val();
        var CuentaCargo = $("#CuentaCargo").val();
        var Solicitud = $("#Solicitud").val();
        var TipoReq = $("#TipoReq").val();
        var Descripcion = $("#Descripcion").val();
        var Params = {
            "NoFolio": NoFolio, "Total": Total, Moneda, "CuentaCargo": CuentaCargo, "Solicitud": Solicitud, "TipoReq": TipoReq, "Descripcion": Descripcion
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Requisiciones/Registrar',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    $('#myModal').modal('hide');
                    // Saul Gonzalez: 15/04/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                    Swal.fire({
                        icon: 'success',
                        title: 'Requisición registrada correctamente',
                        showConfirmButton: true,
                        allowOutsideClick: false
                    }).then((resultConfirmed) => {
                        //Recargamos la pàgina al dar clic en confirmar
                        if (resultConfirmed.isConfirmed) {
                            location.reload();
                        }
                    })
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }


    function CargarRequisicion(IdRequisicion, TipoReq) {
        var Params = {
            "IdRequisicion": IdRequisicion, "TipoReq": TipoReq
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Requisiciones/CargarRequisicion',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    // Saul Gonzalez: 15/04/2020: Seteamos los datos en la modal
                    $("#NoFolio").val(result.Datos.Folio);
                    $("#Total").val(result.Datos.Total.toFixed(2));
                    $("#Moneda").val(result.Datos.Moneda);
                    $("#CuentaCargo").val(result.Datos.Cuenta_Cargo);
                    $("#Solicitud").val(result.Datos.Solicitud);
                    $("#TipoReq option[value=" + result.Datos.TipoReq).attr("selected", true);
                    $("#Descripcion").val(result.Datos.Descripcion);
                    $("#NumFactura").val(result.Datos.NumeroDeFactura);
                    //Validamos si total cargo es diferente a null para setear el valor en el campo
                    if (result.Datos.TotalCargoCliente != null || result.Datos.TotalCargoCliente == "") {
                    $("#CargoCliente").val(result.Datos.TotalCargoCliente.toFixed(2));
                    }
        
                    //Abrimos la modal
                    $('#btnRegistrar').hide();
                    $('#btnActualizar').show();
                    $("#TipoReq").prop('disabled', true);
                    $("#TituloModal").text("Editar Requisición: " + result.Datos.Folio);
                    $('#myModal').modal('show');
               
                    //Saul Gonzalez 16/07/2021: Validamos si el usuario tiene permisos para ediar campos de la requisicion, de no ser asi solo se dejara editar el campo de factura y Cantidad total al Cliente
                    if (result.Datos.UsuarioPermiso == "Administrador")
                    { 
                        $("#Total").prop('disabled', false);
                        $("#Moneda").prop('disabled', false);
                        $("#CuentaCargo").prop('disabled', false);
                        $("#Solicitud").prop('disabled', false);
                        $("#Descripcion").prop('disabled', false);
                        $("#NumFactura").prop('disabled', false);
                        $("#CargoCliente").prop('disabled', false);
                    }
                    else {                      
                        //Tenemos que deshabilitar los campos de la req
                        $("#Total").prop('disabled', true);
                        $("#Moneda").prop('disabled', true);
                        $("#CuentaCargo").prop('disabled', true);
                        $("#Solicitud").prop('disabled', true);
                        $("#Descripcion").prop('disabled', true);
                        $("#NumFactura").prop('disabled', false);
                        $("#CargoCliente").prop('disabled', false);

                    }
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });


    }

    function CargarLiberaciones(IdRequisicion) {
        TablaHistorial.clear().draw();
        $("#ID").val(IdRequisicion);
        var Params = {
            "IdRequisicion": IdRequisicion
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Requisiciones/CargarLiberaciones',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    //Datos de la requisicion
                    $("#FolioLiberacion").val(result.REQ.Folio);
                    $("#CuentaLiberacion").val(result.REQ.Cuenta_Cargo);
                    $("#TotalLiberacion").val(FormatoMiles(result.REQ.Total.toFixed(2)));
                    $("#RestanteLiberacion").val(FormatoMiles(result.REQ.Restante.toFixed(2)));

                    // Saul Gonzalez: 19/04/2020: Seteamos la lista de liberaciones en la tabla de la modal
                    $.each(result.Lista, function (i, obj) {
                        var btnEliminar = `<button type="button" class="btn btn-danger btn-sm" onclick="EliminarLiberacion(${obj.Id})" title="Eliminar registro"><i class="far fa-trash-alt"></i> Eliminar</button>`;
                        obj.Monto = FormatoMiles(obj.Monto.toFixed(2));
                        //Saul Gonzalez 26/10/2020: Agregamos los datos de las entradas a la tabla del tab 1
                        TablaHistorial.row.add([obj.Num_Liberacion, "$" + obj.Monto, obj.FechaRegistro, obj.Notas, btnEliminar])
                            .draw()
                            .node();
                    });
                    if (result.REQ.Restante <= 0) {
                        $("#RestanteLiberacion").css("background-color", "#ffc107e0");
                        $("#btnRegistrarLib").prop('disabled', true);
                        var Folio = $("#FolioLiberacion").val();
                        $("." + Folio).css("color", "#dc2a3b");
                        $("." + Folio).addClass("font-weight-bold");



                    }
                    else {
                        $("#RestanteLiberacion").css("background-color", "#e9ecef");
                        $("#btnRegistrarLib").prop('disabled', false);
                        var Folio = $("#FolioLiberacion").val();
                        $("." + Folio).css("color", "black");
                        $("." + Folio).removeClass("font-weight-bold");
                    }
                    //Una vez cargado los datos mostramos la modal
                    $('#ModalHistorial').modal('show');
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });


    }

    function ActualizarReq() {
        //Saul Gonzalez 22/10/2020: Declaramos los parametros que se van a guardar
        var NoFolio = $("#NoFolio").val();
        var Total = $("#Total").val();
        var Moneda = $("#Moneda").val();
        var CuentaCargo = $("#CuentaCargo").val();
        var Solicitud = $("#Solicitud").val();
        var TipoReq = $("#TipoReq").val();
        var Descripcion = $("#Descripcion").val();
        var NumFactura = $("#NumFactura").val();
        var CargoCliente = $("#CargoCliente").val();
        var Params = {
            "NoFolio": NoFolio, "Total": Total, Moneda, "CuentaCargo": CuentaCargo, "Solicitud": Solicitud, "TipoReq": TipoReq, "Descripcion": Descripcion, "NumFactura": NumFactura, "CargoCliente": CargoCliente,
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Requisiciones/Actualizar',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    $('#myModal').modal('hide');
                    // Saul Gonzalez: 16/04/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                    Swal.fire({
                        icon: 'success',
                        title: 'Requisición actualizada correctamente',
                        showConfirmButton: true,
                        allowOutsideClick: false
                    }).then((resultConfirmed) => {
                        //Recargamos la pàgina al dar clic en confirmar
                        if (resultConfirmed.isConfirmed) {
                            location.reload();
                        }
                    })
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }

    function CancelarRequisicion(IdReq, Descripcion) {
        Swal.fire({
            title: "Aviso",
            html: "¿Esta seguro de cancelar la requisición <b>" + Descripcion + "</b>? <br> Esta se seguira mostrando en el listado de requisiciones pero ya no podras editar sus datos.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, estoy seguro!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                //Saul Gonzalez 16/04/2021: Asignamos los valores para el parametro
                var Params = {
                    "IdReq": IdReq
                };
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Requisiciones/EliminarRequisicion',
                    context: document.body,
                    data: Params,
                    success: function (result) {
                        if (result.status) {
                            // Saul Gonzalez: 16/04/2021: Se muestra un sweetAlert confirmando que los datos se guardaron
                            Swal.fire({
                                html: ' <img src="/img/ReqCancelada.gif" style="width:200px" alt="Cancelado"> <br> <b>Requisición cancelada</b>',
                                timerProgressBar: true,
                                showConfirmButton: true,
                                allowOutsideClick: false
                            }).then((result) => {
                                // Saul Gonzalez: 16/04/2021: Se recarga la pagina despues de cerra el swalFire
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            Swal.fire('Error', result.mensaje, 'error')
                        }
                    },
                    error: function (xhr) {
                        // Debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred...");
                    }
                });
            }
        })

    }

    function EliminarLiberacion(Id) {
         Swal.fire({
             title: '¿Estas seguro de eliminar la liberación?' ,
             html: "Esta acción no se puede revertir!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, estoy seguro!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                //Saul Gonzalez 21/04/2021: Asignamos los valores para el parametro
                var Params = {
                    "Id": Id
                };
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Requisiciones/EliminarLiberacion',
                    context: document.body,
                    data: Params,
                    success: function (result) {
                        if (result.status) {
                            // Saul Gonzalez: 21/04/2021: Se muestra un sweetAlert confirmando que los datos se guardaron
                            Swal.fire({
                                html: ' <img src="/img/Eliminando.gif" style="width:200px" alt="Eliminanda"> <br> <b>Liberación eliminada</b>',
                                timerProgressBar: true,
                                showConfirmButton: true,
                                allowOutsideClick: false
                            }).then((result) => {
                                // Saul Gonzalez: 16/04/2021: Se recarga la tabla de liberaciones despues de eliminar un registro
                                if (result.isConfirmed) {
                                    CargarLiberaciones($("#ID").val());
                                }
                            })
                        }
                        else {
                            Swal.fire('Error', result.mensaje, 'error')
                        }
                    },
                    error: function (xhr) {
                        // Debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred...");
                    }
                });
            }
        })

    }

    //Saul Gonzalez 08/04/2021: funcion para filtrar desmarcar los checks de filtrado
    function LimpiarFiltros() {
        $("#CheckInterna").prop('checked', false);
        $("#CheckBepco").prop('checked', false);
        $("#CheckProyecto").prop('checked', false);
    }

    function Filtrar() {
        var CheckInterna = $('#CheckInterna').prop('checked');
        var CheckBepco = $('#CheckBepco').prop('checked');
        var CheckProyecto = $('#CheckProyecto').prop('checked');
        //Saul Gonzalez 08/04/2021: mandamos los filtros a la funcion de Listar Poryectos
        $("#cuerpo > tr").remove();
        ListarRequisiciones(CheckInterna, CheckBepco, CheckProyecto);
        $('#ModalFiltros').modal('hide');

    }

    function GenerarFolio() {
        if ($("#TipoReq").val() != 0) {
            var TipoReq = $("#TipoReq").val();
            var Params = {
                "TipoReq": TipoReq,
            };

            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Requisiciones/GenerarNumeroDeFolio',
                context: document.body,
                data: Params,
                success: function (result) {
                    if (result.status) {
                        // Saul Gonzalez: 15/04/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                        //$("#NoFolio").prop('disabled', false);
                        $("#NoFolio").val(result.Folio);
                    }
                    else {
                        Swal.fire(
                            'Error',
                            result.mensaje,
                            'error'
                        )
                    }

                },
                error: function (xhr) {
                    // Debugger;
                    console.log(xhr.responseText);
                    alert("Error has occurred...");
                }
            });


        }
        else {
            $("#NoFolio").prop('disabled', true);
            $("#NoFolio").val("");
        }
        //if ($("#TipoReq").val() == 0) {
        //    $("#NoFolio").prop('disabled', true);
        //}
    }

</script>
<style>
    tr {
        text-align: center !important;
    }

    #myTable td:nth-child(1),
    #myTable th:nth-child(1) {
        font-weight: bold;
    }
   
</style>