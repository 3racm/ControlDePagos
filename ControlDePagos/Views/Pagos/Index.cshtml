
@{
    ViewBag.Title = "Pagos";
}
<head>
    <title>Registro de pagos</title>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.22/css/jquery.dataTables.css">
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.22/js/jquery.dataTables.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
</head>
<a id="Documento" hidden>Descargar excel attr</a>
<input id="IdProyecto" type="number" hidden />
@*<button type="button" class="btn btn-primary btn-sm mt-2" title="Retroceder una pagina"><a href="@Url.Action("Index", "Proyectos")" class="text-white" style="text-decoration:none"><i class="fas fa-arrow-alt-circle-left"></i> Regresar</a></button>*@
@*Boton de cerrar el proyecto*@
<label id="EstadoProyecto" style="font-size:20px"> </label>
<div class="form-row float-right">
    <div>
        <button type="button" id="btnCerrar" class="btn btn-danger btn-sm mt-2" title="Marcar el proyecto como cerrado" onclick="CerrarProyecto()"><i class="fas fa-lock"></i> Cerrar el proyecto</button>
        <button type="button" id="btnReabrir" class="btn btn-warning btn-sm mt-2" title="Reabrir el proyecto para su edición" onclick="ReabrirProyecto()"><i class="fas fa-unlock-alt"></i> Reabrir el proyecto</button>
    </div>
</div>
<br>
<h1 style="text-align:center" class="mt-3 mb-4"><i class="fas fa-pencil-ruler"></i> <label id="NumCuenta"> </label>  </h1>

<div class="alert alert-warning text-justify" role="alert">
    <i class="fas fa-info-circle"></i> Los datos del proyecto como el <b>subtotal, retorno y monto final, </b> no se pueden modificar ya que estos se calculan en base a los pagos registrados.
</div>
<form id="formulario">
    <div class="form-row">
        @*<div class="form-group col-md-3">
            <label for="FechaInicio"><i class="fas fa-calendar-alt"></i> Fecha de inicio</label>
            <input type="text" class="form-control" id="FechaInicio" placeholder="Buscar por ID" autocomplete="off">
        </div>*@
        <div class="form-group col-md-3">
            <label for="FechaInicio"><i class="fas fa-calendar-alt"></i> Fecha de inicio </label>
            <div class="input-group mb-2">            
                <input type="date" class="form-control" id="FechaInicio" >
                <div class="input-group-append">
                    <span class="input-group-text"><a id="TextoFechaInicio" onclick="ModificarFechaI()" href="#">Editar</a></span>
                </div>
            </div>
        </div>

        <div class="form-group col-md-3">
            <label for="MontoI"><i class="fas fa-coins"></i> Monto inicial <a id="MonedaProyecto" class="font-weight-bold" style="color:#4caf50"></a></label>
            <div class="input-group mb-2">
                <div class="input-group-prepend">
                    <span class="input-group-text"><i class="fas fa-dollar-sign"></i></span>
                </div>
                <input type="text" class="form-control font-weight-bold" id="MontoI" placeholder="$0.00">
                <div class="input-group-append">
                    <span class="input-group-text"><a id="TextoMontoI" onclick="ModificarMontoI()" href="#">Editar</a></span>
                </div>
            </div>
        </div>
        <div class="form-group col-md-2">
            <label for="Subtotal"> <i class="fas fa-coins"></i> Subtotal <a id="MonedaProyectoSub" class="font-weight-bold" style="color:#4caf50"></a></label>
            <input type="text" class="form-control" id="Subtotal" placeholder="Subtotal">
        </div>
        <div class="form-group col-md-2 div-imagen">
            <label for="RetornoTotal"><i class="fas fa-undo-alt"></i> Retorno</label>
            <input type="text" class="form-control" id="RetornoTotal" placeholder="$0.00">
        </div>
        <div class="form-group col-md-2">
            <label for="MontoF"> <i class="fas fa-coins"></i> Monto final <a id="MonedaProyectoF" class="font-weight-bold" style="color:#4caf50"></a></label>
            <input type="text" class="form-control font-weight-bold pompover" id="MontoF" placeholder="$0.00" data-container="body" data-toggle="popover" data-placement="bottom" title="Aviso" data-content="El monto final ha sobrepasado la cantidad inicial.">
        </div>
    </div>

    <div class="form-row">
        <div class="form-group col-md-12">
            <label for="Descripcion"><i class="far fa-comment-alt"></i> Descripción</label>
            <label for="Descripcion" style="float:right"><i class="fas fa-edit" onclick="HabilitarDesc()"></i> <a href="#" onclick="HabilitarDesc()" id="TextoDescripcion"> Editar descripción</a></label>
            <textarea class="form-control col-sm-12" id="Descripcion" rows="2" placeholder="Descripción del proyecto." autocomplete="off"></textarea>
        </div>

    </div>
    <div class="form-group">
        <h1 style="text-align:center"><i class="fas fa-file-invoice-dollar"></i> Registro de pagos</h1>
        <button type="button" class="btn btn-dark btn-sm" title="Aplicar filtros" data-toggle="modal" data-target="#ModalFiltros"><i class="fas fa-filter"></i> Filtros</button>
        <button type="button" id="btnReg" class="btn btn-success btn-sm" title="Registrar pago" data-toggle="modal" data-target="#ModalPagos"><i class="fas fa-plus-square"></i> Registrar pago</button>
        <span id="FiltrosActivos" class="badge badge-light"><i class="fas fa-filter"></i><b> Filtros activos</b> <a href="" title="Clic aquí para eliminar filtros" onclick="EliminarFiltros()"><i class="far fa-times-circle"></i></a></span>
    </div>
    <table class="table" id="tablaEditada">
        <thead>
            <tr>
                <th scope="col">Fecha</th>
                <th scope="col">Monto pagado</th>
                <th scope="col">Referencia</th>
                <th scope="col">Modo de pago</th>
                <th scope="col">Retorno</th>
                <th scope="col">Ref. Retorno</th>
                <th scope="col" class="THNota">Notas</th>
                <th scope="col">Acciones</th>
            </tr>
        </thead>
        <tbody id="CuerpoPagos">
        </tbody>
    </table>
</form>

@*MODAL DE REGISTRO PAGOS*@
<!-- Modal -->
<div class="modal fade" id="ModalPagos" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle"><i class="fas fa-file-invoice-dollar"></i> <label id="TituloModal">Registrar pago</label></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="FormularioPagos">
                    <input type="number" id="IDPAGO" hidden />
                    <div class="form-group row">
                        <label for="MontoP" class="col-sm-1 col-form-label">Monto</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="MontoP" placeholder="$0.00" autocomplete="off" onkeyup="this.value=Numeros(this.value)">
                        </div>
                        <label for="REF" class="col-sm-2 col-form-label">Referencia</label>
                        <div class="col-sm-5">
                            <input type="text" class="form-control" id="REF" placeholder="# Referencia" autocomplete="off">
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="tipoPago" class="col-sm-1 col-form-label">Pago</label>
                        <div class="col-sm-4">
                            <select class="form-control fas" style="font-size:14px;" id="tipoPago">
                                <option class="fas" style="font-size:14px;" value="EFECTIVO">&#xf0d6; EFECTIVO </option>
                                <option class="fas" style="font-size:14px;" value="TARJETA"> &#xf09d; TARJETA </option>
                                <option class="fas" style="font-size:14px;" value="TRANSFERENCIA"> &#xf362; TRANSFERENCIA </option>
                            </select>
                        </div>
                        <div class="col-sm-2 FechaESP">
                            <div class="form-check" id="CajaFecha">
                                <input class="form-check-input" type="checkbox" value="" id="CheckFechaEspecifica">
                                <label class="form-check-label" for="flexCheckDefault" id="LabelFechaPago">
                                    Asignar fecha
                                </label>

                            </div>

                        </div>
                        <div class="col-sm-5 FechaESP">
                            <input type="date" class="form-control" id="FechaESP" autocomplete="off">
                        </div>
                      
                    </div>
                    <div class="form-group row">
                        <label for="Retorno" id="LabelRetorno" class="col-sm-1 col-form-label">Retorno</label>
                        <div class="col-sm-4" id="CajaRetorno">
                            <input type="text" class="form-control" id="Retorno" placeholder="0.00" autocomplete="off" onkeyup="this.value=Numeros(this.value)">
                        </div>
                        <label for="REFRetorno" class="col-sm-2 col-form-label CajaRetorno">Ref. Retorno</label>
                        <div class="col-sm-5 CajaRetorno" >
                            <input type="text" class="form-control" id="REFRetorno" placeholder="# Referencia para el retorno" autocomplete="off">
                        </div>
                    </div>
                        <div class="form-group row">
                            <label for="NotasPago" class="col-sm-1 col-form-label">Notas</label>
                            <div class="col-sm-11">
                                <textarea class="form-control col-sm-12" id="NotasPago" rows="2" placeholder="Notas de pago" autocomplete="off"></textarea>
                            </div>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="CheckCombinar1">
                            <label class="form-check-label" for="flexCheckDefault">
                                Combinar pago
                            </label>
                        </div>
                        <hr id="Separador1" class="CajaPago2" style="background-color:#607d8b" /> @*---DIVISOR 2DO PAGO--*@
                        <div class="row">
                            <label class="col-sm-2 col-form-label CajaPago2"> <b>#2</b></label>
                        </div>
                        <div class="form-group row CajaPago2">
                            <label for="Monto2" class="col-sm-1 col-form-label">Monto</label>
                            <div class="col-sm-5">
                                <input type="text" class="form-control" id="Monto2" placeholder="0.00" autocomplete="off" onkeyup="this.value=Numeros(this.value)">
                            </div>

                            <label for="tipoPago2" class="col-sm-1 col-form-label">Pago</label>
                            <div class="col-sm-5">
                                <select class="form-control fas" style="font-size:14px;" id="tipoPago2">
                                    <option class="fas" style="font-size:14px;" value="EFECTIVO">&#xf0d6; EFECTIVO </option>
                                    <option class="fas" style="font-size:14px;" value="TARJETA"> &#xf09d; TARJETA </option>
                                    <option class="fas" style="font-size:14px;" value="TRANSFERENCIA"> &#xf362; TRANSFERENCIA </option>
                                </select>
                            </div>
                        </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fas fa-ban"></i> Cancelar</button>
                <button type="button" id="btnRegistrarPago" class="btn btn-success" onclick="RegistrarPago()"><i class="fas fa-save"></i> Registrar</button>
                <button type="button" id="btnActualizarPago" class="btn btn-success" onclick="ActualizarPago()"><i class="fas fa-save"></i> Actualizar</button>
            </div>
        </div>
    </div>
</div>

@*MODAL DE FILTRO *@
<!-- Modal -->
<div class="modal fade" id="ModalFiltros" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title"><i class="fas fa-filter"></i> Aplicar filtros</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="FormularioFiltros">
                    <div class="form-group row">
                        <label for="FiltroREF" class="col-sm-2 col-form-label">Referencia</label>
                        <div class="col-sm-4">
                            <input type="text" class="form-control" id="FiltroREF" placeholder="# Referencia" autocomplete="off">
                        </div>
                        <label for="tipoPagoFiltro" class="col-sm-2 col-form-label">Tipo de pago</label>
                        <div class="col-sm-4">
                            <select class="form-control fas" style="font-size:14px;" id="tipoPagoFiltro">
                                <option class="fas" style="font-size:14px;" value="">&#xf155; CUALQUIERA </option>
                                <option class="fas" style="font-size:14px;" value="EFECTIVO">&#xf0d6; EFECTIVO </option>
                                <option class="fas" style="font-size:14px;" value="TARJETA"> &#xf09d; TARJETA </option>
                                <option class="fas" style="font-size:14px;" value="TRANSFERENCIA"> &#xf362; TRANSFERENCIA </option>
                            </select>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="FechaInicioFiltro" class="col-sm-2 col-form-label">Fecha inicial</label>
                        <div class="col-sm-4">
                            <input type="date" class="form-control" id="FechaInicioFiltro" autocomplete="off">
                        </div>
                        <label for="FechaFinalFiltro" class="col-sm-2 col-form-label">Fecha Final</label>
                        <div class="col-sm-4">
                            <input type="date" class="form-control" id="FechaFinalFiltro" autocomplete="off">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-danger" data-dismiss="modal"><i class="fas fa-ban"></i> Cancelar</button>*@
                <button type="button" class="btn btn-info" onclick="LimpiarFiltros()"> <i class="fas fa-brush"></i> Limpiar filtros</button>
                <button type="button" class="btn btn-success" onclick="FiltrarPagos()"><i class="fas fa-check-circle"></i> Aplicar</button>
            </div>
        </div>
    </div>
</div>


<script lang="es" type="text/javascript">

    //--------Eventos o funciones que se ejecutan al cargar la pagina------------//
    $(document).ready(function () {
        $('[data-toggle="popover"]').popover();
        const valores = window.location.search;
        //Creamos la instancia de la URL
        const urlParams = new URLSearchParams(valores);

        //Accedemos a los valores de la URL
        var IdProyecto = urlParams.get('IdProyecto');
        var Params = {
            "IdProyecto": IdProyecto,
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Pagos/CargarDatosProyecto',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    //Ocultamos el boton de actualizar pago y el campo de retorno
                    $("#btnActualizarPago").hide();
                    $("#LabelRetorno").hide();
                    $("#CajaRetorno").hide();
                    $(".CajaRetorno").hide();
                    //Ocultamos los campos de combinacion de pago #1
                    $(".CajaPago2").hide();
                    //Ocultamos la etiqueta que indica si hay filtros aplicados
                    $('#FiltrosActivos').hide();

                    //Llenamos los datos del proyecto
                    $("#IdProyecto").val(result.DatosProyecto.Id);
                    $("#NumCuenta").text(result.DatosProyecto.Num_Proyecto_Cuenta);
                    $("#NumCuenta").prop('disabled', true);
                    $("#FechaInicio").val(result.DatosProyecto.FechaInicio);
                    $("#FechaInicio").prop('disabled', true);
                    $("#MontoI").val(FormatoMiles(result.DatosProyecto.MontoInicial.toFixed(2)));
                    $("#MontoI").prop('disabled', true);
                    $("#MonedaProyecto").text("(" + result.DatosProyecto.Moneda + ")");
                    $("#MonedaProyectoSub").text("(" + result.DatosProyecto.Moneda + ")");
                    $("#Subtotal").prop('disabled', true);
                    $("#MonedaProyectoF").text("(" + result.DatosProyecto.Moneda + ")");
                    $("#MontoF").val("$" + result.DatosProyecto.MontoFinal);
                    $("#MontoF").prop('disabled', true);
                    $("#RetornoTotal").val("$" + FormatoMiles(result.DatosProyecto.Retorno.toFixed(2)));
                    $("#RetornoTotal").prop('disabled', true);
                    $("#Descripcion").val(result.DatosProyecto.Descripcion);
                    $("#Descripcion").prop('disabled', true);

                    //El campo de fecha especifica se desactiva
                    $("#FechaESP").prop('disabled', true);                  

                    //19/03/2021:Seteamos los valores del Subtotal, Retorno y Monto Final
                    $("#Subtotal").val("$" + FormatoMiles(result.Subtotal.toFixed(2)));
                    $("#RetornoTotal").val("$" + FormatoMiles(result.TotalRetorno.toFixed(2)));
                    $("#MontoF").val("$" + FormatoMiles(result.MontoFinal.toFixed(2)));
                    //Se oculta el boton de reabir el proyecto
                    $("#btnReabrir").hide();
                    $("#btnCerrar").show();              
                    //Seteamos el estado del proyecto
                    if (result.DatosProyecto.Estado == "Activo") {

                        $("#EstadoProyecto").css("color", "#33c139");
                        $("#EstadoProyecto").append('<i class="fas fa-toggle-on"></i> Activo');
                    }     
                    else if (result.DatosProyecto.Estado == "Cerrado") {
                        $("#EstadoProyecto").css("color", "#dc3545");
                        $("#EstadoProyecto").append('<i class="fas fa-toggle-off"></i> Cerrado');
                        $("#btnReabrir").show();
                        $("#btnCerrar").hide();
                        $("#btnReg").prop('disabled', true);                        
                    }
                    else if (result.DatosProyecto.Estado == "Reabierto") {
                        $("#EstadoProyecto").css("color", "#f19206");
                        $("#EstadoProyecto").append('<i class="fas fa-toggle-on"></i> Reabierto');
                    }
                    
                    //Si el monto final supera al monto inicial cambiamos el color y mostramos un aviso
                    if (result.MontoFinal < 0) {
                        $("#MontoF").css("background-color", "#ff9800");
                        $('.pompover').click();
                        setTimeout(function () {
                            $('.pompover').click();
                        }, 7000);
                    }
                    //else if (true) {
                    //    //TODO: 30/09/2021: Validar si el numero es negativo
                    //}

                    //Despues se llenan los pagos que pertenecen al proyecto si es que tuviera
                    if (result.ListaPagos.length > 0) {
                        $.each(result.ListaPagos, function (i, obj) {
                            //Validamos si el registro trae combinaciones de pago
                            var TipoPago = obj.TipoPago;
                            var Monto = obj.Monto;;
                            if (obj.Monto2 != null || obj.Monto2 > 0) {
                                TipoPago = obj.TipoPago + " Y " + obj.TipoPago2;
                                Monto = obj.Monto + obj.Monto2;
                            }

                            //Si el campo de notas es null ponemos una cadena vacia para que no muestre null
                            if (obj.Notas == null) {
                                obj.Notas = "";
                            }
                            if (obj.REF_Retorno == null || obj.REF_Retorno == "") {
                                obj.REF_Retorno = "N/A";
                            }
                            //Aplicamos el formato para separar los miles con comas
                            Monto = FormatoMiles(Monto.toFixed(2));
                            obj.Retorno = FormatoMiles(obj.Retorno.toFixed(2));
                            //Creamos la fila con sus respectivos datos
                            Fila = `
                             <tr>
                                <th>${obj.FechaPago}</th>
                                <td>${Monto}</td>
                                <td>${obj.Referencia}</td>
                                <td>${TipoPago}</td>
                                <td>${obj.Retorno}</td>
                                <td>${obj.REF_Retorno}</td>
                                <td class="TDNota">${obj.Notas}</td>
                                <td>
                                <button type="button" class="btn btn-info btn-sm" title="Editar" onclick="EditarPago(${obj.Id})"><i class="fas fa-edit"></i></button>
                                <button type="button" class="btn btn-warning btn-sm" title="Ver notas" onclick="VerNotas()"><i class="fas fa-comment-dots"></i></button>
                                <button type="button" class="btn btn-danger btn-sm" title="Eliminar" onclick="EliminarPago(${obj.Id},'${obj.Referencia}')"><i class="far fa-trash-alt"></i></button>
                                </td>
                             </tr>`;


                            //Una vez creada la fila la insertamos en la tabla
                            $("#CuerpoPagos").append(Fila);
                        });
                    }
                    else {
                        Fila = `
                             <tr>
                             <th colspan="6" class="text-center" style="color:#545252">Aun no se han registrado pagos para este proyecto.</th>
                             </tr>`;
                        //Una vez creada la fila la insertamos en la tabla
                        $("#CuerpoPagos").append(Fila);
                    }
                    //Ocultamos la columna de notas
                    $(".THNota").hide()
                    $(".TDNota").hide()
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
        $("#GenerarExcel").click(function () {
            //Validar Rango de fechas
            var FechaInicial = $("#FechaI").val();
            var FechaFinal = $("#FechaF").val();
            var Entradas = $('#Entradas').prop('checked');
            var Consumibles = $('#Consumibles').prop('checked');
            var Salidas = $('#Salidas').prop('checked');
            //Datos opcionales
            var IdProducto = $("#IdProducto").val();
            var Modelo = $("#Modelo").val();
            var Descripcion = $("#Descripción").val();
            var NoProyecto = $("#Proyecto").val();
            var Exportar = true;

            var Params = {
                "FechaInicial": FechaInicial, "FechaFinal": FechaFinal, "Entradas": Entradas, "Consumibles": Consumibles, "Salidas": Salidas, IdProducto: IdProducto,
                "Modelo": Modelo, "NotDescripcionas": Descripcion, "Descripcion": Descripcion, "NoProyecto": NoProyecto, "Exportar": Exportar
            };

            Swal.fire({
                title: 'Exportando su reporte a Excel',
                html: ' <img src="https://1.bp.blogspot.com/-zvqYSiR52Ys/XXV4xThSRCI/AAAAAAAAATU/12K2r5Pz0UEMFeI3dj6vn-rxGq2kX0B8ACLcBGAs/s1600/giphy%2BEXCEL2GIF.gif" style="width:200px" alt="Generando">',
                timer: 4500,
                timerProgressBar: true,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Reportes/GenerarReporte',
                context: document.body,
                data: Params,
                success: function (result) {
                    //Asignamos  a la propiedad href la direccion y nombre del archivo
                    $('#Documento').attr('href', "/Plantillas/" + result.NombreDeArchivo);
                    $('#Documento').attr('download', result.NombreDeArchivo);
                    setTimeout(function () {
                        swal.close();
                        //Simulamos un click en la etiqueta para comnezar la descarga del archivo
                        document.getElementById("Documento").click();

                        //Despues de descargar el archivo lo eliminamos del servidor
                        EliminarDocumento(result.NombreDeArchivo);
                    }, 4500);


                }
            });
        });

        $("#GeneralExcelFiltro").click(function () {
            //Validar Rango de fechas
            var FechaInicial = $("#FechaI").val();
            var FechaFinal = $("#FechaF").val();
            var Entradas = $('#Entradas').prop('checked');
            var Consumibles = $('#Consumibles').prop('checked');
            var Salidas = $('#Salidas').prop('checked');
            //Datos opcionales
            var IdProducto = $("#IdProducto").val();
            var Modelo = $("#Modelo").val();
            var Descripcion = $("#Descripción").val();
            var NoProyecto = $("#Proyecto").val();
            var Exportar = true;

            var Params = {
                "FechaInicial": FechaInicial, "FechaFinal": FechaFinal, "Entradas": Entradas, "Consumibles": Consumibles, "Salidas": Salidas, IdProducto: IdProducto,
                "Modelo": Modelo, "NotDescripcionas": Descripcion, "Descripcion": Descripcion, "NoProyecto": NoProyecto, "Exportar": Exportar
            };

            Swal.fire({
                title: 'Exportando su reporte a Excel',
                html: ' <img src="https://1.bp.blogspot.com/-zvqYSiR52Ys/XXV4xThSRCI/AAAAAAAAATU/12K2r5Pz0UEMFeI3dj6vn-rxGq2kX0B8ACLcBGAs/s1600/giphy%2BEXCEL2GIF.gif" style="width:200px" alt="Generando">',
                timer: 4500,
                timerProgressBar: true,
                showConfirmButton: false,
                allowOutsideClick: false

            });
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Reportes/GenerarReporte',
                context: document.body,
                data: Params,
                success: function (result) {
                    //Asignamos  a la propiedad href la direccion y nombre del archivo
                    $('#Documento').attr('href', "/Plantillas/" + result.NombreDeArchivo);
                    $('#Documento').attr('download', result.NombreDeArchivo);
                    setTimeout(function () {
                        swal.close();
                        //Simulamos un click en la etiqueta para comnezar la descarga del archivo
                        document.getElementById("Documento").click();

                        //Despues de descargar el archivo lo eliminamos del servidor
                        EliminarDocumento(result.NombreDeArchivo);
                    }, 4500);


                }
            });

        });


        //Funcion que elimina el documento del reporte creado temporalmente
        function EliminarDocumento(NombreDeArchivo) {
            $.ajax({
                url: "/Catalogo/EliminarDocumento",
                type: "POST",
                data: { NombreDeArchivo: NombreDeArchivo },
                success: function (result) {
                    console.log("Se elimino un archivo temporal");
                }
            });
        }

        //Saul Gonzalez 26/10/2020: Resetear modal cuando se cierra
        $("#ModalPagos").on("hidden.bs.modal", function () {
            $('#FormularioPagos')[0].reset();
            $("#btnActualizarPago").hide();
            $("#btnRegistrarPago").show();
            $("#LabelRetorno").hide();
            $("#CajaRetorno").hide();
            $(".CajaRetorno").hide();
            $("#TituloModal").text("Registrar pago");
            $(".CajaPago2").hide();
            $(".FechaESP").show();
            //Se restablece el input de la fecha
            $("#LabelFechaPago").text("Asignar fecha");
            $("#FechaESP").val();
            $("#CheckFechaEspecifica").show();          
            $('#CajaFecha').removeClass('form-group').addClass('form-check');
            $("#FechaESP").prop('disabled', true); 
            //Al cerrar la modal reinicimos el select de tipos de pago
            CargarTiposPago();
        });

        //Evento que se ejecuta al dar clic al check de combinar pagos #1
        $("#CheckCombinar1").click(function () {
            if ($('#CheckCombinar1').prop('checked')) {
                $(".CajaPago2").show();
            }
            else if ($('#CheckCombinar1').prop('checked') == false) {
                $(".CajaPago2").hide();
            }
        });

        //Evento que se ejecuta al dar clic al check de fecha especifica
        $("#CheckFechaEspecifica").click(function () {
            if ($('#CheckFechaEspecifica').prop('checked')) {
                $("#FechaESP").prop('disabled', false);   
            }
            else if ($('#CheckFechaEspecifica').prop('checked') == false) {
                $("#FechaESP").prop('disabled', true);   
            }
        });

    });
    //Funcion para que un input solo acepte numeros o puntos decimales
    function Numeros(string) {//Solo numeros
        var out = '';
        var filtro = '1234567890.';//Caracteres validos

        //Recorrer el texto y verificar si el caracter se encuentra en la lista de validos
        for (var i = 0; i < string.length; i++)
            if (filtro.indexOf(string.charAt(i)) != -1)
                //Se añaden a la salida los caracteres validos
                out += string.charAt(i);

        //Retornar valor filtrado
        return out;
    }

    function FormatoMiles(nStr) {
        nStr += '';
        var x = nStr.split('.');
        var x1 = x[0];
        var x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    }
    function RegistrarPago() {
        //Saul Gonzalez 17/03/2021: Declaramos los parametros que se van a guardar
        var IdProyecto = $("#IdProyecto").val();
        var Monto = $("#MontoP").val();
        var REF = $("#REF").val();
        var TipoPago = $("#tipoPago").val();
        var Retorno = $("#Retorno").val();
        var NotasPago = $("#NotasPago").val();
        //parametros de las combinaciones de pago
        var Monto2 = $("#Monto2").val();
        var tipoPago2 = $("#tipoPago2").val();
        var FechaESP = $("#FechaESP").val();
        var Params = {
            "IdProyecto": IdProyecto, "Monto": Monto, "REF": REF, "TipoPago": TipoPago, "Retorno": Retorno, "NotasPago": NotasPago, "Monto2": Monto2, "tipoPago2": tipoPago2, "FechaESP": FechaESP
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Pagos/RegistrarPago',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    $('#ModalPagos').modal('hide');
                    // Saul Gonzalez: 17/03/2021: Se muestra un sweetAlert confirmando que los datos se guardaron
                    Swal.fire({
                        icon: 'success',
                        title: result.mensaje,
                        showConfirmButton: true,
                        allowOutsideClick: false
                    }).then((resultConfirmed) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (resultConfirmed.isConfirmed) {
                            location.reload();
                        }
                    })
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }

    function EditarPago(IdPago) {
        //Saul Gonzalez 22/03/2021: Declaramos los parametros que se van mandar
        var Params = {
            "IdPago": IdPago
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Pagos/CargarPago',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    $('#ModalPagos').modal('show');
                    $("#TituloModal").text("Editar pago");                
                    $("#LabelRetorno").show();
                    $("#CajaRetorno").show();
                    $(".CajaRetorno").show();
                    //Mostramos el campo de fecha y le asignamos su valor
                    $("#LabelFechaPago").text("Fecha pago");
                    $("#FechaESP").val(result.Datos.FechaPago); 
                    $("#CheckFechaEspecifica").hide();
                    $("#FechaESP").prop('disabled', false);  
                    $('#CajaFecha').removeClass('form-check').addClass('form-group');
                    //$(".FechaESP").hide();
                                     
                    //Saul Gonzalez 22/03/2021: Seteamos los datos del pago en la modal
                    $("#IDPAGO").val(result.Datos.Id);
                    $("#MontoP").val(result.Datos.Monto.toFixed(2));
                    $("#REF").val(result.Datos.Referencia)
                    $("#tipoPago option[value=" + result.Datos.TipoPago).attr("selected", true);
                    $("#Retorno").val(result.Datos.Retorno.toFixed(2));
                    $("#REFRetorno").val(result.Datos.REF_Retorno);
                    $("#NotasPago").val(result.Datos.Notas);
                    //Verificamos si el registro tiene pagos combinados
                    if (result.Datos.Monto2 != null || result.Datos.Monto2 > 0) {
                        $("#Monto2").val(result.Datos.Monto2.toFixed(2));
                        $("#tipoPago2 option[value=" + result.Datos.TipoPago2).attr("selected", true);
                        $("#CheckCombinar1").prop('checked', true);
                        $(".CajaPago2").show();
                    }
                    $("#btnActualizarPago").show();
                    $("#btnRegistrarPago").hide();

                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }

    function ActualizarPago() {
        //Saul Gonzalez 17/03/2021: Declaramos los parametros que se van a guardar
        var IdPago = $("#IDPAGO").val();
        var Monto = $("#MontoP").val();
        var REF = $("#REF").val();
        var TipoPago = $("#tipoPago").val();
        var FechaPago = $("#FechaESP").val();
        var Retorno = $("#Retorno").val();     
        var REFRetorno = $("#REFRetorno").val();     
        var NotasPago = $("#NotasPago").val();
        //parametros de las combinaciones de pago
        var Monto2 = $("#Monto2").val();
        var tipoPago2 = $("#tipoPago2").val();
        var Params = {
            "IdPago": IdPago, "Monto": Monto, "REF": REF, "TipoPago": TipoPago, "FechaPago": FechaPago, "Retorno": Retorno, "REFRetorno": REFRetorno, "NotasPago": NotasPago, "Monto2": Monto2, "tipoPago2": tipoPago2
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Pagos/ActualizarPago',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    $('#ModalPagos').modal('hide');
                    // Saul Gonzalez: 17/03/2021: Se muestra un sweetAlert confirmando que los datos se guardaron
                    Swal.fire({
                        icon: 'success',
                        title: result.mensaje,
                        showConfirmButton: true,
                        allowOutsideClick: false
                    }).then((resultConfirmed) => {
                        /* Evento que se ejecuta despues de dar clic en "OK" */
                        if (resultConfirmed.isConfirmed) {
                            location.reload();
                        }
                    })
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }
    function CargarTiposPago() {
        $("#tipoPago > option").remove();
        $("#tipoPago").append(`<option class="fas" style="font-size:14px;" value="EFECTIVO">&#xf0d6; EFECTIVO </option>
                                <option class="fas" style="font-size:14px;" value="TARJETA"> &#xf09d; TARJETA </option>
                                <option class="fas" style="font-size:14px;" value="TRANSFERENCIA"> &#xf362; TRANSFERENCIA </option>`);
        $("#tipoPago2 > option").remove();
        $("#tipoPago2").append(`<option class="fas" style="font-size:14px;" value="EFECTIVO">&#xf0d6; EFECTIVO </option>
                                <option class="fas" style="font-size:14px;" value="TARJETA"> &#xf09d; TARJETA </option>
                                <option class="fas" style="font-size:14px;" value="TRANSFERENCIA"> &#xf362; TRANSFERENCIA </option>`);
    }
    function ModificarMontoI() {
        if ($("#TextoMontoI").text() == "Editar") {
            $("#TextoMontoI").text('Actualizar');
            $("#MontoI").prop('disabled', false);
        }
        else if ($("#TextoMontoI").text() == "Actualizar") {
            //Primero obtenemos el Id del proyecto
            const valores = window.location.search;
            //Creamos la instancia de la URL
            const urlParams = new URLSearchParams(valores);
            //Accedemos a los valores de la URL y tomamos el ID
            var IdProyectoP = urlParams.get('IdProyecto');
            var MontoInicial = $("#MontoI").val();
            //-----Se Realiza un metodo AJAX que actualiza el Monto inicial----//
            var Params = {
                "IdProyectoP": IdProyectoP, "MontoInicial": MontoInicial
            };
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Proyectos/ActualizarMontoInicial',
                context: document.body,
                data: Params,
                success: function (result) {
                    if (result.status) {
                        //Mostramos un mensaje de actualizando
                        Swal.fire({
                            title: 'Actualizando',
                            html: ' <img src="/img/Actualizando.gif" style="width:200px" alt="Actualizando">',
                            timer: 700,
                            timerProgressBar: true,
                            showConfirmButton: false,
                            allowOutsideClick: false

                        });
                        $("#TextoMontoI").text('Editar');                 
                        $("#MontoI").prop('disabled', true);
                        setTimeout(function () {
                            location.reload();
                        }, 1000);

                    }
                    else {
                        Swal.fire(
                            'Error',
                            result.mensaje,
                            'error'
                        )
                    }

                },
                error: function (xhr) {
                    // Debugger;
                    console.log(xhr.responseText);
                    alert("Error has occurred...");
                }
            });
        }

    }

    function ModificarFechaI() {
        if ($("#TextoFechaInicio").text() == "Editar") {
            $("#TextoFechaInicio").html('<i class="fas fa-check-circle" title="Confirmar cambios" style="color:#4caf50"></i>');
            $("#FechaInicio").prop('disabled', false);        
        }
        else if ($("#TextoFechaInicio").html() == '<i class="fas fa-check-circle" title="Confirmar cambios" style="color:#4caf50" aria-hidden="true"></i><span class="sr-only">Confirmar cambios</span>') {
            //Primero obtenemos el Id del proyecto
            const valores = window.location.search;
            //Creamos la instancia de la URL
            const urlParams = new URLSearchParams(valores);
            //Accedemos a los valores de la URL y tomamos el ID
            var IdProyectoP = urlParams.get('IdProyecto');
            var FechaInicio = $("#FechaInicio").val();
            //-----Se Realiza un metodo AJAX que actualiza el Monto inicial----//
            var Params = {
                "IdProyectoP": IdProyectoP, "FechaInicio": FechaInicio
            };
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Proyectos/ActualizarFechaInicial',
                context: document.body,
                data: Params,
                success: function (result) {
                    if (result.status) {
                        //Mostramos un mensaje de actualizando
                        Swal.fire({
                            title: 'Actualizando fecha',
                            html: ' <img src="/img/Actualizando.gif" style="width:200px" alt="Actualizando">',
                            timer: 700,
                            timerProgressBar: true,
                            showConfirmButton: false,
                            allowOutsideClick: false

                        });
                        $("#TextoFechaInicio").html('Editar');
                        $("#FechaInicio").prop('disabled', true);                     
                    }
                    else {
                        Swal.fire(
                            'Error',
                            result.mensaje,
                            'error'
                        )
                    }

                },
                error: function (xhr) {
                    // Debugger;
                    console.log(xhr.responseText);
                    alert("Error has occurred...");
                }
            });
        }

    }

    function CerrarProyecto() {
        Swal.fire({
            title: "Aviso",
            html: "El proyecto <b>" + $("#NumCuenta").text() + "</b> se marcará como <b>cerrado</b>, ¿Estás seguro de realizar esta acción? ",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, estoy seguro!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                //Saul Gonzalez 26/10/2020: Asignamos los valores para el parametro
                var IdProyecto = $("#IdProyecto").val();
                var Params = {
                    "IdProyecto": IdProyecto
                };
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Proyectos/CerrarProyecto',
                    context: document.body,
                    data: Params,
                    success: function (result) {
                        if (result.status) {
                            // Saul Gonzalez: 26/10/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                            Swal.fire({
                                html: ' <img src="https://thumbs.gfycat.com/ColorlessGrouchyBear-small.gif" style="width:200px" alt="Eliminado"> <br> <b>Proyecto cerrado correctamente</b>',
                                timerProgressBar: true,
                                showConfirmButton: true,
                                allowOutsideClick: false
                            }).then((result) => {
                                // Saul Gonzalez: 26/10/2020: Se recarga la pagina despues de cerra el swalFire
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            Swal.fire('Error', result.mensaje, 'error')
                        }
                    },
                    error: function (xhr) {
                        // Debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred...");
                    }
                });
            }
        })

    }

    function ReabrirProyecto() {
        Swal.fire({
            title: "Aviso",
            html: "El proyecto <b>" + $("#NumCuenta").text() + "</b> se marcará como <b>reabierto</b>, ¿Estás seguro de realizar esta acción? ",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, estoy seguro!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                //Saul Gonzalez 26/10/2020: Asignamos los valores para el parametro
                var IdProyecto = $("#IdProyecto").val();
                var Params = {
                    "IdProyecto": IdProyecto
                };
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Proyectos/ReabrirProyecto',
                    context: document.body,
                    data: Params,
                    success: function (result) {
                        if (result.status) {
                            // Saul Gonzalez: 26/10/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                            Swal.fire({
                                html: ' <img src="https://i.pinimg.com/originals/46/8e/fa/468efa115ce8dc3a1020f5df3f928369.gif" style="width:200px" alt="Eliminado"> <br> <b>Proyecto reabierto correctamente</b>',
                                timerProgressBar: true,
                                showConfirmButton: true,
                                allowOutsideClick: false
                            }).then((result) => {
                                // Saul Gonzalez: 26/10/2020: Se recarga la pagina despues de cerra el swalFire
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            Swal.fire('Error', result.mensaje, 'error')
                        }
                    },
                    error: function (xhr) {
                        // Debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred...");
                    }
                });
            }
        })

    }    

    function VerNotas() {
        if ($(".TDNota").is(":visible") == false && $(".THNota").is(":visible") == false) {
            //Si estaban ocultas los mostramos
            $(".TDNota").show();
            $(".THNota").show();

        }
        else if ($(".TDNota").is(":visible") == true && $(".THNota").is(":visible") == true) {
            //Si estaban visibles los ocultamos
            $(".TDNota").hide();
            $(".THNota").hide();
        }
    }

    function EliminarPago(IdPago, REF) {
        Swal.fire({
            title: "Aviso",
            html: "¿Esta seguro de eliminar el pago con la referencia <b>" + REF + "</b>? <br> <b> ¡Esta accion no se puede revertir! </b>",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Si, estoy seguro!',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                //Saul Gonzalez 26/10/2020: Asignamos los valores para el parametro
                var Params = {
                    "IdPago": IdPago
                };
                $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    cache: false,
                    url: '/Pagos/EliminarPago',
                    context: document.body,
                    data: Params,
                    success: function (result) {
                        if (result.status) {
                            // Saul Gonzalez: 26/10/2020: Se muestra un sweetAlert confirmando que los datos se guardaron
                            Swal.fire({
                                html: ' <img src="https://i.pinimg.com/originals/ff/fa/9b/fffa9b880767231e0d965f4fc8651dc2.gif" style="width:200px" alt="Eliminado"> <br> <b>Pago eliminado correctamente</b>',
                                timerProgressBar: true,
                                showConfirmButton: true,
                                allowOutsideClick: false
                            }).then((result) => {
                                // Saul Gonzalez: 26/10/2020: Se recarga la pagina despues de cerra el swalFire
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            })
                        }
                        else {
                            Swal.fire('Error', result.mensaje, 'error')
                        }
                    },
                    error: function (xhr) {
                        // Debugger;
                        console.log(xhr.responseText);
                        alert("Error has occurred...");
                    }
                });
            }
        })

    }

    function FiltrarPagos() {
        var IdProyecto = $("#IdProyecto").val();
        var FiltroREF = $("#FiltroREF").val();
        var tipoPagoFiltro = $("#tipoPagoFiltro").val();
        var FechaInicioFiltro = $("#FechaInicioFiltro").val();
        var FechaFinalFiltro = $("#FechaFinalFiltro").val();
        //-----Se Realiza un metodo AJAX que actualiza el Monto inicial----//
        var Params = {
            "IdProyecto": IdProyecto, "FiltroREF": FiltroREF, "tipoPagoFiltro": tipoPagoFiltro, "FechaInicioFiltro": FechaInicioFiltro, "FechaFinalFiltro": FechaFinalFiltro 
        };
        $.ajax({
            type: "POST",
            traditional: true,
            async: false,
            cache: false,
            url: '/Pagos/Filtrar',
            context: document.body,
            data: Params,
            success: function (result) {
                if (result.status) {
                    //Mostramos un mensaje de actualizando
                    Swal.fire({
                        title: 'Aplicando filtros',
                        html: ' <img src="/img/Actualizando.gif" style="width:200px" alt="Actualizando">',
                        timer: 700,
                        timerProgressBar: true,
                        showConfirmButton: false,
                        allowOutsideClick: false

                    });   
                    //Limpiamos la tabla de pagos y volvemos a agregar registros
                    $("#CuerpoPagos > tr").remove()

                    $.each(result.Lista, function (i, obj) {
                        //Validamos si el registro trae combinaciones de pago
                        var TipoPago = obj.TipoPago;
                        var Monto = obj.Monto;;
                        if (obj.Monto2 != null || obj.Monto2 > 0) {
                            TipoPago = obj.TipoPago + " Y " + obj.TipoPago2;
                            Monto = obj.Monto + obj.Monto2;
                        }

                        //Si el campo de notas es null ponemos una cadena vacia para que no muestre null
                        if (obj.Notas == null) {
                            obj.Notas = "";
                        }
                        //Creamos la fila con sus respectivos datos
                        Fila = `
                             <tr>
                                <th>${obj.FechaPago}</th>
                                <td>${Monto.toFixed(2)}</td>
                                <td>${obj.Referencia}</td>
                                <td>${TipoPago}</td>
                                <td>${obj.Retorno.toFixed(2)}</td>
                                <td class="TDNota">${obj.Notas}</td>
                                <td>
                                <button type="button" class="btn btn-info btn-sm" title="Editar" onclick="EditarPago(${obj.Id})"><i class="fas fa-edit"></i></button>
                                <button type="button" class="btn btn-warning btn-sm" title="Ver notas" onclick="VerNotas()"><i class="fas fa-comment-dots"></i></button>
                                <button type="button" class="btn btn-danger btn-sm" title="Eliminar" onclick="EliminarPago(${obj.Id},'${obj.Referencia}')"><i class="far fa-trash-alt"></i></button>
                                </td>
                             </tr>`;


                        //Una vez creada la fila la insertamos en la tabla
                        $("#CuerpoPagos").append(Fila);
                        //Oculamos la columna de notas
                        $(".TDNota").hide();
                    });
                    //Ocultamos la modal
                    $('#ModalFiltros').modal('hide');
                    $(".TDNota").hide();
                    $(".THNota").hide();
                    //Si los campos de la modal de filtros estan vacios dejamos la etiqueta oculta de lo contrario mostramos la etiqueta de que hay filtros activos
                    if ($("#FiltroREF").val() == "" && $("#tipoPagoFiltro").val() == "" && $("#FechaInicioFiltro").val() == "" && $("#FechaFinalFiltro").val() == "") {
                        $('#FiltrosActivos').hide();
                    } 
                    else {
                        $('#FiltrosActivos').show();
                    }

        
               
                    
                }
                else {
                    Swal.fire(
                        'Error',
                        result.mensaje,
                        'error'
                    )
                }

            },
            error: function (xhr) {
                // Debugger;
                console.log(xhr.responseText);
                alert("Error has occurred...");
            }
        });
    }
    //Saul Gonzalez 03/02/2020: funcion para filtrar desmarcar los checks de filtrado
    function LimpiarFiltros() {
        $('#FormularioFiltros')[0].reset();        
    }
    function EliminarFiltros() {
        $('#FormularioFiltros')[0].reset();
        FiltrarPagos();
        $('#FiltrosActivos').hide();
    }

    function HabilitarDesc() {
       
        if ($("#TextoDescripcion").text() == " Editar descripción") {
            $("#TextoDescripcion").html('Guardar cambios');
            $("#Descripcion").prop('disabled', false);   
        }
        else if ($("#TextoDescripcion").text() == 'Guardar cambios') {
            //Primero obtenemos el Id del proyecto
            const valores = window.location.search;
            //Creamos la instancia de la URL
            const urlParams = new URLSearchParams(valores);
            //Accedemos a los valores de la URL y tomamos el ID
            var IdProyectoP = urlParams.get('IdProyecto');
            var Descripcion = $("#Descripcion").val();
            //-----Se Realiza un metodo AJAX que actualiza el Monto inicial----//
            var Params = {
                "IdProyectoP": IdProyectoP, "Descripcion": Descripcion
            };
            $.ajax({
                type: "POST",
                traditional: true,
                async: false,
                cache: false,
                url: '/Proyectos/ActualizarDescripcion',
                context: document.body,
                data: Params,
                success: function (result) {
                    if (result.status) {
                        //Mostramos un mensaje de actualizando
                        Swal.fire({
                            title: 'Actualizando descripción',
                            html: ' <img src="/img/Actualizando.gif" style="width:200px" alt="Actualizando">',
                            timer: 700,
                            timerProgressBar: true,
                            showConfirmButton: false,
                            allowOutsideClick: false

                        });
                        $("#TextoDescripcion").html(' Editar descripción');
                        $("#Descripcion").prop('disabled', true);
                    }
                    else {
                        Swal.fire(
                            'Error',
                            result.mensaje,
                            'error'
                        )
                    }

                },
                error: function (xhr) {
                    // Debugger;
                    console.log(xhr.responseText);
                    alert("Error has occurred...");
                }
            });
        }
    }
</script>

<style>
    .center {
        position: relative;
        left: 25%;
        padding: 10px;
    }

    .centerchecks {
        position: relative;
        left: 20%;
        padding: 10px;
    }

    .circular {
        border-radius: 8px;
    }

    .desvanecer:hover {
        opacity: 0.8;
        color: #007bff;
        -webkit-transition: opacity 700ms;
        -moz-transition: opacity 700ms;
        -o-transition: opacity 700ms;
        -ms-transition: opacity 700ms;
        transition: opacity 700ms;
    }

    .div-imagen {
        display: inline-block;
        position: relative;
    }

        .div-imagen > div {
            position: absolute;
            top: 0;
            left: 0;
            z-index: -1;
            padding: 10px;
            margin: 0;
        }

    body {
        overflow-x: hidden !important;
    }

    #CuerpoSalidas td {
        text-align: center !important;
        font-size: 15px;
    }

    .popover-header {
        text-align: center !important;
        font-weight: bold;
    }

    .popover-body {
        text-align: center !important;
        font-weight: bold;
    }

</style>

